[{"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/index.tsx":"1","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/i18n.ts":"2","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/reportWebVitals.ts":"3","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/App.tsx":"4","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/common/constants/antdLocale.ts":"5","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/Router.tsx":"6","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/Header/Header.tsx":"7","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/Footer/Footer.tsx":"8","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/Sider/Sider.tsx":"9","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/api.ts":"10","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/store/index.ts":"11","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/store/project.ts":"12","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/common/constants/locale.ts":"13","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/DashBoard/DashBoard.tsx":"14","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/NotFound/NotFound.tsx":"15","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/About/About.tsx":"16","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Users/Users.tsx":"17","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Platform/Platform.tsx":"18","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Login/Login.tsx":"19","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/store/user.ts":"20","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/ContainerHeader/ContainerHeader.tsx":"21","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/common/constants/index.ts":"22","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Platform/CheckInUserInfoForm.tsx":"23","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/RoomManagement/RoomManagement.tsx":"24","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/ModifyUserModal/ModifyUserModal.tsx":"25","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/AddUserModal/AddUserModal.tsx":"26"},{"size":842,"mtime":1609870643000,"results":"27","hashOfConfig":"28"},{"size":256,"mtime":1609870643000,"results":"29","hashOfConfig":"28"},{"size":425,"mtime":1609870643000,"results":"30","hashOfConfig":"28"},{"size":973,"mtime":1609870643000,"results":"31","hashOfConfig":"28"},{"size":281,"mtime":1609870643000,"results":"32","hashOfConfig":"28"},{"size":1010,"mtime":1610001270348,"results":"33","hashOfConfig":"28"},{"size":2963,"mtime":1609870643000,"results":"34","hashOfConfig":"28"},{"size":653,"mtime":1609870643000,"results":"35","hashOfConfig":"28"},{"size":3189,"mtime":1609870643000,"results":"36","hashOfConfig":"28"},{"size":2791,"mtime":1610003319508,"results":"37","hashOfConfig":"28"},{"size":230,"mtime":1609870643000,"results":"38","hashOfConfig":"28"},{"size":482,"mtime":1609870643000,"results":"39","hashOfConfig":"28"},{"size":309,"mtime":1609870643000,"results":"40","hashOfConfig":"28"},{"size":4146,"mtime":1609870643000,"results":"41","hashOfConfig":"28"},{"size":239,"mtime":1609870643000,"results":"42","hashOfConfig":"28"},{"size":3828,"mtime":1610000936838,"results":"43","hashOfConfig":"28"},{"size":8320,"mtime":1610003710330,"results":"44","hashOfConfig":"28"},{"size":5927,"mtime":1609870643000,"results":"45","hashOfConfig":"28"},{"size":4323,"mtime":1609870643000,"results":"46","hashOfConfig":"28"},{"size":480,"mtime":1609870643000,"results":"47","hashOfConfig":"28"},{"size":508,"mtime":1609870643000,"results":"48","hashOfConfig":"28"},{"size":1659,"mtime":1609870643000,"results":"49","hashOfConfig":"28"},{"size":2439,"mtime":1609870643000,"results":"50","hashOfConfig":"28"},{"size":456,"mtime":1610001276662,"results":"51","hashOfConfig":"28"},{"size":2187,"mtime":1610002594771,"results":"52","hashOfConfig":"28"},{"size":1842,"mtime":1610003179688,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1flzvx3",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/index.tsx",[],["113","114"],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/i18n.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/reportWebVitals.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/App.tsx",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/common/constants/antdLocale.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/Router.tsx",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/Header/Header.tsx",["115"],"import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { MenuInfo } from 'rc-menu/lib/interface';\nimport classnames from 'classnames';\nimport Cookies from 'js-cookie';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport { LOCALE } from '@common/constants/locale';\n\nimport { LOGOUT } from '@api';\nimport { setAuthKey } from '@store/project';\n\nimport { Dropdown, Button, Menu, message } from 'antd';\nimport { GlobalOutlined, CheckOutlined } from '@ant-design/icons';\n\nimport './Header.scss';\n\ntype IProps = {};\n\nfunction Header(props: IProps) {\n  const { i18n, t } = useTranslation();\n  const _locale: string = i18n.language;\n  const [localeDropdownVisible, setLocaleDropdownVisible] = React.useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const project: any = useSelector<any>(state => state.project);\n  const user: any = useSelector<any>(state => state.user);\n\n  if (!project.authHeaderValue) {\n    // 未登录\n    history.replace('/login');\n  }\n\n  const handleI18n = (param: MenuInfo): void => {\n    const { key } = param;\n\n    if (key !== _locale) {\n      Cookies.set('locale', key as string);\n      i18n.changeLanguage(key as string);\n    }\n  };\n\n  const menu: React.ReactElement = (\n    <Menu>\n      {Object.keys(LOCALE).map(\n        (language: string): JSX.Element => {\n          const activity = _locale === language;\n          const classNames = classnames({ 'local-activity': activity });\n          return (\n            <Menu.Item key={language} onClick={handleI18n}>\n              <div className={classNames}>\n                {activity ? <CheckOutlined /> : null}\n                {LOCALE[language]}\n              </div>\n            </Menu.Item>\n          );\n        }\n      )}\n    </Menu>\n  );\n\n  const handleLogOut = React.useCallback(async () => {\n    try {\n      await LOGOUT({\n        data: {\n          user: user.account,\n          password: user.password,\n          type: user.type\n        }\n      });\n      dispatch(setAuthKey({\n        authHeaderKey: null,\n        authHeaderValue: null\n      }));\n      message.success(t('注销成功'));\n      history.replace('/login');\n    } catch (error) {\n      message.error(t('注销失败'));\n      message.error(error);\n    }\n  }, [user]);\n\n  const handleToggleLocaleDropdownVisible = React.useCallback(() => {\n    setLocaleDropdownVisible(prev => !prev);\n  }, [])\n\n  return (\n    <header className={'header'}>\n      <span className={'say-hello'}>\n        {t('欢迎！')}\n        {user.account || ''}\n      </span>\n      <Button className={'log-out'} type={'link'} onClick={handleLogOut}>{t('注销')}</Button>\n      <Dropdown overlay={menu} visible={localeDropdownVisible} onVisibleChange={handleToggleLocaleDropdownVisible}>\n        <Button>\n          {t(LOCALE[_locale])} <GlobalOutlined />\n        </Button>\n      </Dropdown>\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/Footer/Footer.tsx",["116"],"import * as React from 'react';\nimport { withTranslation, WithTranslation } from 'react-i18next';\n\nimport './Footer.scss';\n\ntype IProps = WithTranslation;\n\nconst Footer: React.FC<IProps> = props => {\n  const render: JSX.Element = React.useMemo(\n    () => (\n      <footer className={'footer'}>\n        <span>Copyright &copy; 2021 </span>\n        <a target=\"__blank\" href=\"https://github.com/EuphoriaCHN/hotel_management_fe\" rel=\"noopener noreferrer\">\n          XUST SE1701 GROUP 4.\n        </a>\n        <span>All Rights Reserved.</span>\n      </footer>\n    ),\n    [props.i18n.language]\n  );\n\n  return render;\n}\n\nexport default withTranslation()(Footer);\n","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/Sider/Sider.tsx",["117","118","119","120","121"],"import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport * as H from 'history';\n\nimport { Layout, Menu, Tooltip } from 'antd';\nimport { MenuInfo } from 'rc-menu/lib/interface';\nimport {\n  SearchOutlined,\n  HomeOutlined,\n  QuestionCircleOutlined,\n  UsergroupAddOutlined,\n  CarryOutOutlined,\n  SendOutlined,\n  UserOutlined\n} from '@ant-design/icons';\n\nimport './Sider.scss';\n\ntype SIDER_DATA = {\n  k: string;\n  icon: React.ReactElement;\n  value?: string;\n  title?: string;\n  auth?: Array<number>;\n  children?: Array<SIDER_DATA>;\n};\n\nfunction Sider(props: {}) {\n  const [menuKey, setMenuKey] = React.useState('platform');\n  const [collapsed, setCollapsed] = React.useState(false);\n\n  const _history: H.History<H.LocationState> = useHistory();\n  const _location = useLocation();\n\n  const { t, i18n } = useTranslation();\n\n  const getTitle: null | React.ReactNode = collapsed ? (\n    <div className={'collapsed-title'} />\n  ) : (\n      <Tooltip title={t('酒店管理系统')}>\n        <h3 className={'title'}>{t('酒店管理系统')}</h3>\n      </Tooltip>\n    );\n\n  const handleChangeRoute = React.useCallback((param: MenuInfo) => {\n    const { key } = param;\n    _history.push(`/${key}`);\n  }, []);\n\n  const siderData = React.useMemo<Array<SIDER_DATA>>(() => ([\n    { k: 'platform', icon: <SendOutlined />, value: t('入住 & 离店') },\n    { k: 'roomReservation', icon: <CarryOutOutlined />, value: t('客房预订') },\n    { k: 'search', icon: <SearchOutlined />, value: t('信息查询') },\n    { k: 'roomInfoManagement', icon: <HomeOutlined />, value: t('客房管理') },\n    { k: 'userInfoManagement', icon: <UsergroupAddOutlined />, value: t('用户管理') },\n    { k: 'dashboard', icon: <UserOutlined />, value: t('个人中心') },\n    { k: 'about', icon: <QuestionCircleOutlined />, value: t('关于') },\n  ]), []);\n\n  const getSiderItem = React.useCallback((item: SIDER_DATA) => {\n    // todo:: Authorization\n    if (item.k && item.k.length) {\n      return (\n        <Menu.Item key={item.k} icon={item.icon} onClick={handleChangeRoute}>\n          {item.value}\n        </Menu.Item>\n      );\n    }\n    return (\n      <Menu.SubMenu icon={item.icon} title={item.title}>\n        {item.children.map(getSiderItem)}\n      </Menu.SubMenu>\n    );\n  }, []);\n\n  React.useEffect(() => {\n    if (_location.pathname === '/') {\n      _history.replace('/platform');\n    } else {\n      const nowLocation = _location.pathname.split(/\\/(.*)/)[1];\n      nowLocation && setMenuKey(nowLocation);\n    }\n  }, [_location.pathname]);\n\n  const render: JSX.Element = React.useMemo(\n    () => (\n      <Layout.Sider\n        className={'sider'}\n        collapsed={collapsed}\n        onCollapse={setCollapsed}\n        collapsible\n      >\n        {getTitle}\n        <Menu\n          theme={'dark'}\n          selectedKeys={[menuKey]}\n          onSelect={({ selectedKeys }) => setMenuKey(selectedKeys[0] as string)}\n          mode={'inline'}\n        >\n          {siderData.map(getSiderItem)}\n        </Menu>\n      </Layout.Sider>\n    ),\n    [collapsed, i18n.language, menuKey]\n  );\n\n  return render;\n};\n\nexport default Sider;\n","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/api.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/store/index.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/store/project.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/common/constants/locale.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/DashBoard/DashBoard.tsx",["122","123"],"import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport ContainerHeader from '@components/ContainerHeader/ContainerHeader';\n\nimport { Descriptions, Button, Modal, Form, Input, message } from 'antd';\n\nimport { MODIFY_ADMIN_PASSWORD } from '@api';\nimport { setAuthKey } from '@store/project';\n\nimport './DashBoard.scss';\n\ntype IProps = {};\n\nfunction DashBoard(props: IProps) {\n  const [modifyPasswordModalVisible, setModifyPasswordModalVisible] = React.useState<boolean>(false);\n\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const history = useHistory();\n  const user: any = useSelector<any>(state => state.user);\n  const dispatch = useDispatch();\n\n  const onSubmitModifyPassword = React.useCallback(async () => {\n    const [oldPassword, newPassword, ensure] = ['oldPassword', 'newPassword', 'ensure'].map(item => form.getFieldValue(item));\n    let errorMessage = null;\n    switch (true) {\n      case newPassword !== ensure:\n        errorMessage = t('两次输入的新密码不一致！');\n        break;\n      case newPassword.length < 6:\n        errorMessage = t('密码长度不得小于 6 位！');\n        break;\n      case oldPassword !== user.password:\n        errorMessage = t('旧密码不正确！');\n        break;\n      case oldPassword === newPassword:\n        errorMessage = t('新旧密码不能相同！');\n    }\n    if (errorMessage) {\n      message.error(errorMessage);\n      return;\n    }\n\n    try {\n      // todo:: 修改普通用户\n      await MODIFY_ADMIN_PASSWORD({\n        data: {\n          user: user.account,\n          name: user.account,\n          password: newPassword\n        }\n      });\n      // 修改密码成功，清除用户数据，重新登录\n      dispatch(setAuthKey({\n        authHeaderKey: null,\n        authHeaderValue: null\n      }));\n      message.success(t('修改密码成功，请重新登录！'));\n      history.replace('/login');\n    } catch (error) {\n      message.error(t('修改密码失败'));\n      message.error(error);\n    }\n  }, [user]);\n\n  const render = React.useMemo(() => (\n    <React.Fragment>\n      <div className={'container dashboard'}>\n        <ContainerHeader text={t('个人中心')} />\n        <Descriptions bordered>\n          <Descriptions.Item label={t('用户名')} span={3}>\n            {user.account || ''}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('密码')} span={3}>\n            <Button type={'primary'} onClick={setModifyPasswordModalVisible.bind(this, true)}>{t('修改密码')}</Button>\n          </Descriptions.Item>\n        </Descriptions>\n      </div>\n      <Modal\n        title={t('修改密码')}\n        visible={modifyPasswordModalVisible}\n        onOk={onSubmitModifyPassword}\n        onCancel={setModifyPasswordModalVisible.bind(this, false)}\n      >\n        <Form form={form}>\n          <Form.Item\n            name={'oldPassword'}\n            label={t('旧密码')}\n            rules={[{ required: true, message: t('此项为必填项!') }]}\n          >\n            <Input.Password\n              type={'password'}\n              placeholder={t('请输入旧密码')}\n              allowClear\n            />\n          </Form.Item>\n          <Form.Item\n            name={'newPassword'}\n            label={t('新密码')}\n            rules={[{ required: true, message: t('此项为必填项!') }]}\n          >\n            <Input.Password\n              type={'password'}\n              placeholder={t('请输入新密码')}\n              allowClear\n            />\n          </Form.Item>\n          <Form.Item\n            name={'ensure'}\n            label={t('二次确认')}\n            rules={[{ required: true, message: t('此项为必填项!') }]}\n          >\n            <Input.Password\n              type={'password'}\n              placeholder={t('请再次输入新密码')}\n              allowClear\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </React.Fragment>\n  ), [modifyPasswordModalVisible]);\n  return render;\n}\n\nexport default DashBoard;","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/NotFound/NotFound.tsx",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/About/About.tsx",["124","125","126"],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Users/Users.tsx",["127","128","129","130","131","132","133","134"],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Platform/Platform.tsx",["135","136","137","138","139","140","141"],"import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport classnames from 'classnames';\nimport { chunk } from 'lodash-es';\n\nimport { IdentityType, REGEXP } from '@common/constants';\n\nimport { Card, Form, Checkbox, Input, Button, Row, Col } from 'antd';\n\nimport ContainerHeader from '@components/ContainerHeader/ContainerHeader';\n\nimport CheckInUserInfoForm from './CheckInUserInfoForm';\n\nimport {\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n  ArrowLeftOutlined,\n  ContainerOutlined,\n  PlusOutlined,\n} from '@ant-design/icons';\n\nimport './Platform.scss';\n\ntype IProps = {};\n\nfunction Platform(props: IProps) {\n  const [hasReverse, setHasReverse] = React.useState<boolean>(false);\n  const [status, setStatus] = React.useState<'checkIn' | 'checkOut'>(null);\n  const { t, i18n } = useTranslation();\n\n  const [form] = Form.useForm();\n\n  const cardItems = React.useMemo(() => ([{\n    label: t('入住登记'),\n    coverIcon: <CheckCircleOutlined />,\n    coverClassName: 'check-in-card-cover',\n    onClick: setStatus.bind(this, 'checkIn')\n  }, {\n    label: t('离店登记'),\n    coverIcon: <CloseCircleOutlined />,\n    coverClassName: 'check-out-card-cover',\n    onClick: () => { }\n  }]), [i18n.language]);\n\n  const renderSelectStatusCard = React.useMemo(() => (\n    <div className={'platform-card-container'}>\n      {cardItems.map(item => (\n        <Card\n          className={'platform-card'}\n          cover={<div className={classnames('platform-card-cover', item.coverClassName)}>{item.coverIcon}</div>}\n          onClick={item.onClick}\n          hoverable\n        >\n          <Card.Meta title={item.label} />\n        </Card>\n      ))}\n    </div>\n  ), [status]);\n\n  /**\n   * 输入完成订单号，查询订单详情\n   */\n  const onReverseIDBlur = React.useCallback(() => {\n    const reverseID = form.getFieldValue('reverseID');\n    if (!reverseID) {\n      return;\n    }\n\n  }, []);\n\n  const onCheckInFormFinish = React.useCallback(({ guests }) => {\n    console.log(guests);\n    return;\n    // if (hasReverse) {\n    //   if (!reverseID) {\n    //     message.error(t('请输入预订订单号！'));\n    //     return;\n    //   }\n    // } else {\n    //   let errorMessage: string = null;\n    //   switch (undefined) {\n    //     case hosingName:\n    //       errorMessage = t('请输入客户姓名');\n    //       break;\n    //     case hosingPhone:\n    //       errorMessage = t('请输入客户联系方式');\n    //       break;\n    //     case identity.type:\n    //       errorMessage = t('请选择证件类型');\n    //       break;\n    //     case identity.id:\n    //       errorMessage = t('请输入证件编号');\n    //   }\n    //   if (errorMessage) {\n    //     message.error(errorMessage);\n    //     return;\n    //   }\n    //   switch (false) {\n    //     case REGEXP.name.test(hosingName):\n    //       errorMessage = t('姓名格式错误！');\n    //       break;\n    //     case REGEXP.phone.test(hosingPhone):\n    //       errorMessage = t('联系方式格式错误！');\n    //       break;\n    //   }\n    //   if (errorMessage) {\n    //     message.error(errorMessage);\n    //     return;\n    //   }\n    //   switch (IdentityType[identity.type]) {\n    //     case IdentityType.ID:\n    //       REGEXP.id.test(identity.id) || (errorMessage = t('身份证格式错误'));\n    //       break;\n    //     case IdentityType.DRIVER_LICENSE:\n    //       REGEXP.driver.test(identity.id) || (errorMessage = t('驾驶证格式错误'));\n    //       break;\n    //     case IdentityType.CERTIFICATE:\n    //       REGEXP.certificate.test(identity.id) || (errorMessage = t('军官证格式错误'));\n    //   }\n    //   if (errorMessage) {\n    //     message.error(errorMessage);\n    //     return;\n    //   }\n    // }\n  }, [hasReverse]);\n\n  const renderCheckinTab = React.useMemo(() => (\n    <div className={'platform-tab'}>\n      <ContainerHeader text={t('入住登记')} backIcon={<ArrowLeftOutlined />} onBackIconClick={setStatus.bind(this, null)} />\n      <div className={'platform-container'}>\n        <Form\n          className={'platform-checkin-form'}\n          onFinish={onCheckInFormFinish}\n          form={form}\n          autoComplete={'off'}\n        >\n          <Form.Item>\n            <Checkbox checked={hasReverse} onChange={setHasReverse.bind(this, (prev: boolean) => !prev)}>{t('是否有预订')}</Checkbox>\n          </Form.Item>\n          {hasReverse ? (\n            <Form.Item name={'reverseID'}>\n              <Input prefix={<ContainerOutlined />} placeholder={t('订单号')} onBlur={onReverseIDBlur} allowClear autoFocus />\n            </Form.Item>\n          ) : (\n              <Form.List name=\"guests\">\n                {(fields, { add, remove }) => {\n                  const chunks = chunk(fields.map(field => (\n                    <CheckInUserInfoForm formField={field} onRemove={remove.bind(this, field.name)} />\n                  )), 2);\n                  return (\n                    <React.Fragment>\n                      {chunks.map(row => (\n                        <Row gutter={32}>\n                          {row.map(col => <Col span={12}>{col}</Col>)}\n                        </Row>\n                      ))}\n                      <Form.Item>\n                        <Button type=\"dashed\" onClick={add} block icon={<PlusOutlined />}>\n                          {t('增加客户')}\n                        </Button>\n                      </Form.Item>\n                    </React.Fragment>\n                  );\n                }}\n              </Form.List>\n            )}\n          <Form.Item>\n            <Button type={'primary'} htmlType={'submit'} block>{t('提交信息')}</Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div >\n  ), [hasReverse, onCheckInFormFinish]);\n\n  return (\n    <div className={'platform container'}>\n      {status === null ? renderSelectStatusCard : renderCheckinTab}\n    </div>\n  );\n}\n\nexport default Platform;","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Login/Login.tsx",["142","143"],"import * as React from 'react';\nimport { Carousel, Form, Input, Button, Typography, Tooltip, message, Switch } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport { LOGIN } from '@api';\n\nimport { setUser } from '@store/user';\nimport { setAuthKey } from '@store/project';\n\nimport './Login.scss';\n\nconst webpackContext = require.context('../../common/images/loginCarouselImages', true, /\\.jpg$/);\nconst carouselBackgroundImages = webpackContext.keys().reduce((modules, path) => {\n  const name = path.replace(/^\\.\\/(.*)\\..+$/, '$1');\n  const module = webpackContext(path);\n  modules[name] = module.default;\n  return modules;\n}, {});\n\ntype IProps = {};\n\nconst caruselBaseStyle: React.CSSProperties = {\n  height: '100vh',\n  backgroundColor: '#364d79',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n};\n\nfunction Login(props: IProps) {\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onFormSubmit = React.useCallback<\n    (_: { userName: string; password: string; isAdmin: boolean; }) => Promise<unknown>\n  >(async ({ userName, password, isAdmin }) => {\n    const errorMessage = !userName ? t('用户名不能为空') : !password ? t('密码不能为空') : null;\n    if (errorMessage) {\n      message.error(errorMessage);\n      return;\n    }\n    setLoading(true);\n    try {\n      const { authHeaderKey, authHeaderValue } = await LOGIN({\n        data: {\n          user: userName,\n          password: password,\n          type: isAdmin ? 'admin' : 'normal'\n        }\n      });\n      dispatch(setUser({\n        type: isAdmin ? 'admin' : 'normal',\n        account: userName,\n        password\n      }));\n      dispatch(setAuthKey({\n        authHeaderKey,\n        authHeaderValue,\n      }));\n      // 登录成功，redirect\n      message.success(t('登录成功'));\n      history.replace('/platform');\n    } catch (error) {\n      message.error(t('登录失败!'));\n      message.error(error.message || JSON.stringify(error));\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const render = React.useMemo(() => (\n    <div className={'login-page'}>\n      <div className={'login-page-form-box'}>\n        <Typography.Title title={'h2'}>\n          {t('酒店管理系统')}\n        </Typography.Title>\n        <Form\n          name={'normal_login'}\n          className={'login-form'}\n          initialValues={{ remember: true }}\n          onFinish={onFormSubmit}\n        >\n          <Form.Item\n            name={'userName'}\n            rules={[{ required: true, message: t('用户名为必填项!') }]}\n          >\n            <Input prefix={<UserOutlined className={'site-form-item-icon'} />} placeholder={t('用户名')} allowClear autoFocus />\n          </Form.Item>\n          <Form.Item\n            name={'password'}\n            rules={[{ required: true, message: t('密码为必填项!') }]}\n          >\n            <Input.Password\n              prefix={<LockOutlined className={'site-form-item-icon'} />}\n              type={'password'}\n              placeholder={t('密码')}\n              allowClear\n            />\n          </Form.Item>\n          <Form.Item label={t('是否为管理员')} name={'isAdmin'}>\n            <Switch />\n          </Form.Item>\n          <Form.Item>\n            <Button loading={loading} type={'primary'} htmlType={'submit'} block>\n              {t('登录')}\n            </Button>\n          </Form.Item>\n          <Form.Item className={'more-operation'}>\n            <Tooltip title={t('请联系管理员修改密码')}>\n              <Typography.Link>{t('忘记密码？')}</Typography.Link>\n            </Tooltip>\n          </Form.Item>\n        </Form>\n      </div>\n      <Carousel\n        effect={'fade'}\n        dotPosition={'right'}\n        autoplay\n      >\n        {Object.values(carouselBackgroundImages).map(image => (\n          <div>\n            <div\n              style={Object.assign({}, caruselBaseStyle, { backgroundImage: `url(${image})` })}\n            />\n          </div>\n        ))}\n      </Carousel>\n    </div>\n  ), [loading]);\n  return render;\n}\n\nexport default Login;","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/store/user.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/ContainerHeader/ContainerHeader.tsx",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/common/constants/index.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Platform/CheckInUserInfoForm.tsx",["144"],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/RoomManagement/RoomManagement.tsx",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/ModifyUserModal/ModifyUserModal.tsx",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/AddUserModal/AddUserModal.tsx",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":83,"column":6,"nodeType":"151","endLine":83,"endColumn":12,"suggestions":"152"},{"ruleId":"149","severity":1,"message":"153","line":19,"column":5,"nodeType":"151","endLine":19,"endColumn":26,"suggestions":"154"},{"ruleId":"149","severity":1,"message":"155","line":49,"column":6,"nodeType":"151","endLine":49,"endColumn":8,"suggestions":"156"},{"ruleId":"149","severity":1,"message":"157","line":59,"column":7,"nodeType":"151","endLine":59,"endColumn":9,"suggestions":"158"},{"ruleId":"149","severity":1,"message":"159","line":75,"column":6,"nodeType":"151","endLine":75,"endColumn":8,"suggestions":"160"},{"ruleId":"149","severity":1,"message":"161","line":84,"column":6,"nodeType":"151","endLine":84,"endColumn":26,"suggestions":"162"},{"ruleId":"149","severity":1,"message":"163","line":105,"column":5,"nodeType":"151","endLine":105,"endColumn":40,"suggestions":"164"},{"ruleId":"149","severity":1,"message":"165","line":67,"column":6,"nodeType":"151","endLine":67,"endColumn":12,"suggestions":"166"},{"ruleId":"149","severity":1,"message":"167","line":125,"column":6,"nodeType":"151","endLine":125,"endColumn":34,"suggestions":"168"},{"ruleId":"149","severity":1,"message":"169","line":60,"column":5,"nodeType":"151","endLine":60,"endColumn":13,"suggestions":"170"},{"ruleId":"149","severity":1,"message":"157","line":78,"column":8,"nodeType":"151","endLine":78,"endColumn":29,"suggestions":"171"},{"ruleId":"149","severity":1,"message":"172","line":110,"column":5,"nodeType":"151","endLine":110,"endColumn":26,"suggestions":"173"},{"ruleId":"149","severity":1,"message":"174","line":79,"column":6,"nodeType":"151","endLine":79,"endColumn":25,"suggestions":"175"},{"ruleId":"149","severity":1,"message":"174","line":104,"column":6,"nodeType":"151","endLine":104,"endColumn":16,"suggestions":"176"},{"ruleId":"149","severity":1,"message":"177","line":129,"column":6,"nodeType":"151","endLine":129,"endColumn":21,"suggestions":"178"},{"ruleId":"149","severity":1,"message":"177","line":149,"column":6,"nodeType":"151","endLine":149,"endColumn":21,"suggestions":"179"},{"ruleId":"149","severity":1,"message":"180","line":151,"column":28,"nodeType":"181","endLine":151,"endColumn":45},{"ruleId":"149","severity":1,"message":"182","line":213,"column":6,"nodeType":"151","endLine":213,"endColumn":8,"suggestions":"183"},{"ruleId":"149","severity":1,"message":"184","line":232,"column":8,"nodeType":"151","endLine":232,"endColumn":10,"suggestions":"185"},{"ruleId":"149","severity":1,"message":"186","line":244,"column":6,"nodeType":"151","endLine":244,"endColumn":8,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":6,"column":10,"nodeType":"190","messageId":"191","endLine":6,"endColumn":22},{"ruleId":"188","severity":1,"message":"192","line":6,"column":24,"nodeType":"190","messageId":"191","endLine":6,"endColumn":30},{"ruleId":"149","severity":1,"message":"157","line":43,"column":8,"nodeType":"151","endLine":43,"endColumn":23,"suggestions":"193"},{"ruleId":"149","severity":1,"message":"194","line":58,"column":6,"nodeType":"151","endLine":58,"endColumn":14,"suggestions":"195"},{"ruleId":"149","severity":1,"message":"196","line":69,"column":6,"nodeType":"151","endLine":69,"endColumn":8,"suggestions":"197"},{"ruleId":"149","severity":1,"message":"198","line":125,"column":6,"nodeType":"151","endLine":125,"endColumn":18,"suggestions":"199"},{"ruleId":"149","severity":1,"message":"200","line":173,"column":6,"nodeType":"151","endLine":173,"endColumn":39,"suggestions":"201"},{"ruleId":"149","severity":1,"message":"150","line":74,"column":6,"nodeType":"151","endLine":74,"endColumn":8,"suggestions":"202"},{"ruleId":"149","severity":1,"message":"203","line":134,"column":6,"nodeType":"151","endLine":134,"endColumn":15,"suggestions":"204"},{"ruleId":"188","severity":1,"message":"205","line":5,"column":40,"nodeType":"190","messageId":"191","endLine":5,"endColumn":45},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"react-hooks/exhaustive-deps","React Hook React.useCallback has missing dependencies: 'dispatch', 'history', and 't'. Either include them or remove the dependency array.","ArrayExpression",["208"],"React Hook React.useMemo has an unnecessary dependency: 'props.i18n.language'. Either exclude it or remove the dependency array.",["209"],"React Hook React.useCallback has a missing dependency: '_history'. Either include it or remove the dependency array.",["210"],"React Hook React.useMemo has a missing dependency: 't'. Either include it or remove the dependency array.",["211"],"React Hook React.useCallback has a missing dependency: 'handleChangeRoute'. Either include it or remove the dependency array.",["212"],"React Hook React.useEffect has a missing dependency: '_history'. Either include it or remove the dependency array.",["213"],"React Hook React.useMemo has missing dependencies: 'getSiderItem', 'getTitle', and 'siderData'. Either include them or remove the dependency array.",["214"],"React Hook React.useCallback has missing dependencies: 'dispatch', 'form', 'history', and 't'. Either include them or remove the dependency array.",["215"],"React Hook React.useMemo has missing dependencies: 'form', 'onSubmitModifyPassword', 't', and 'user.account'. Either include them or remove the dependency array.",["216"],"React Hook React.useMemo has missing dependencies: 'index', 'value.href', and 'value.name'. Either include them or remove the dependency array.",["217"],["218"],"React Hook React.useMemo has missing dependencies: 'dateFormater', 't', and 'technologyStack'. Either include them or remove the dependency array.",["219"],"React Hook React.useCallback has a missing dependency: 't'. Either include it or remove the dependency array.",["220"],["221"],"React Hook React.useCallback has missing dependencies: 'handleSearchUser', 'loadData', and 't'. Either include them or remove the dependency array.",["222"],["223"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","MemberExpression","React Hook React.useCallback has missing dependencies: 'handleDeleteUser' and 't'. Either include them or remove the dependency array.",["224"],"React Hook React.useMemo has missing dependencies: 'renderTableActionColumn', 'renderTableTypeColumn', and 't'. Either include them or remove the dependency array.",["225"],"React Hook React.useEffect has missing dependencies: 'loadData' and 'project.authHeaderKey'. Either include them or remove the dependency array.",["226"],"@typescript-eslint/no-unused-vars","'IdentityType' is defined but never used.","Identifier","unusedVar","'REGEXP' is defined but never used.",["227"],"React Hook React.useMemo has a missing dependency: 'cardItems'. Either include it or remove the dependency array.",["228"],"React Hook React.useCallback has a missing dependency: 'form'. Either include it or remove the dependency array.",["229"],"React Hook React.useCallback has an unnecessary dependency: 'hasReverse'. Either exclude it or remove the dependency array.",["230"],"React Hook React.useMemo has missing dependencies: 'form', 'onReverseIDBlur', and 't'. Either include them or remove the dependency array.",["231"],["232"],"React Hook React.useMemo has missing dependencies: 'onFormSubmit' and 't'. Either include them or remove the dependency array.",["233"],"'Space' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"240","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"261","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"240","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"236","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},"Update the dependencies array to be: [dispatch, history, t, user.account, user.password, user.type]",{"range":"282","text":"283"},"Update the dependencies array to be: []",{"range":"284","text":"285"},"Update the dependencies array to be: [_history]",{"range":"286","text":"287"},"Update the dependencies array to be: [t]",{"range":"288","text":"289"},"Update the dependencies array to be: [handleChangeRoute]",{"range":"290","text":"291"},"Update the dependencies array to be: [_history, _location.pathname]",{"range":"292","text":"293"},"Update the dependencies array to be: [collapsed, getSiderItem, getTitle, menuKey, siderData]",{"range":"294","text":"295"},"Update the dependencies array to be: [dispatch, form, history, t, user.account, user.password]",{"range":"296","text":"297"},"Update the dependencies array to be: [form, modifyPasswordModalVisible, onSubmitModifyPassword, t, user.account]",{"range":"298","text":"299"},"Update the dependencies array to be: [index, status, value.href, value.name]",{"range":"300","text":"301"},{"range":"302","text":"289"},"Update the dependencies array to be: [dateFormater, t, technologyStack]",{"range":"303","text":"304"},"Update the dependencies array to be: [current, pageSize, t]",{"range":"305","text":"306"},"Update the dependencies array to be: [loadData, t]",{"range":"307","text":"308"},"Update the dependencies array to be: [handleSearchUser, loadData, searchedValue, t]",{"range":"309","text":"310"},{"range":"311","text":"310"},"Update the dependencies array to be: [handleDeleteUser, t]",{"range":"312","text":"313"},"Update the dependencies array to be: [renderTableActionColumn, renderTableTypeColumn, t]",{"range":"314","text":"315"},"Update the dependencies array to be: [loadData, project.authHeaderKey]",{"range":"316","text":"317"},{"range":"318","text":"289"},"Update the dependencies array to be: [cardItems]",{"range":"319","text":"320"},"Update the dependencies array to be: [form]",{"range":"321","text":"322"},{"range":"323","text":"285"},"Update the dependencies array to be: [form, hasReverse, onCheckInFormFinish, onReverseIDBlur, t]",{"range":"324","text":"325"},"Update the dependencies array to be: [dispatch, history, t]",{"range":"326","text":"327"},"Update the dependencies array to be: [loading, onFormSubmit, t]",{"range":"328","text":"329"},[2295,2301],"[dispatch, history, t, user.account, user.password, user.type]",[563,584],"[]",[1257,1259],"[_history]",[1834,1836],"[t]",[2266,2268],"[handleChangeRoute]",[2508,2528],"[_history, _location.pathname]",[3028,3063],"[collapsed, getSiderItem, getTitle, menuKey, siderData]",[1981,1987],"[dispatch, form, history, t, user.account, user.password]",[3778,3806],"[form, modifyPasswordModalVisible, onSubmitModifyPassword, t, user.account]",[2064,2072],"[index, status, value.href, value.name]",[2409,2430],[3634,3655],"[dateFormater, t, technologyStack]",[2441,2460],"[current, pageSize, t]",[3046,3056],"[loadData, t]",[3695,3710],"[handleSearchUser, loadData, searchedValue, t]",[4257,4272],[6105,6107],"[handleDeleteUser, t]",[6481,6483],"[renderTableActionColumn, renderTableTypeColumn, t]",[6761,6763],"[loadData, project.authHeaderKey]",[1198,1213],[1664,1672],"[cardItems]",[1863,1865],"[form]",[3567,3579],[5489,5522],"[form, hasReverse, onCheckInFormFinish, onReverseIDBlur, t]",[2221,2223],"[dispatch, history, t]",[4124,4133],"[loading, onFormSubmit, t]"]
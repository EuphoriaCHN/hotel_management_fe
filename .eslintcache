[{"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/index.tsx":"1","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/i18n.ts":"2","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/reportWebVitals.ts":"3","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/App.tsx":"4","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/common/constants/antdLocale.ts":"5","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/Router.tsx":"6","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/Header/Header.tsx":"7","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/Footer/Footer.tsx":"8","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/Sider/Sider.tsx":"9","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/api.ts":"10","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/store/index.ts":"11","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/store/project.ts":"12","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/common/constants/locale.ts":"13","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/DashBoard/DashBoard.tsx":"14","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/NotFound/NotFound.tsx":"15","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/About/About.tsx":"16","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Users/Users.tsx":"17","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Platform/Platform.tsx":"18","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Login/Login.tsx":"19","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/store/user.ts":"20","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/ContainerHeader/ContainerHeader.tsx":"21","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/common/constants/index.ts":"22","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Platform/CheckInUserInfoForm.tsx":"23","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/RoomManagement/RoomManagement.tsx":"24","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/ModifyUserModal/ModifyUserModal.tsx":"25","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/AddUserModal/AddUserModal.tsx":"26","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/store/room.ts":"27","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Reservation/Reservation.tsx":"28","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/AddRoomTypeModal/AddRoomTypeModal.tsx":"29","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Search/Search.tsx":"30"},{"size":842,"mtime":1609870643000,"results":"31","hashOfConfig":"32"},{"size":256,"mtime":1609870643000,"results":"33","hashOfConfig":"32"},{"size":425,"mtime":1609870643000,"results":"34","hashOfConfig":"32"},{"size":973,"mtime":1609870643000,"results":"35","hashOfConfig":"32"},{"size":281,"mtime":1609870643000,"results":"36","hashOfConfig":"32"},{"size":1239,"mtime":1610069354556,"results":"37","hashOfConfig":"32"},{"size":3263,"mtime":1610069285330,"results":"38","hashOfConfig":"32"},{"size":653,"mtime":1609870643000,"results":"39","hashOfConfig":"32"},{"size":3434,"mtime":1610069928585,"results":"40","hashOfConfig":"32"},{"size":3335,"mtime":1610068684684,"results":"41","hashOfConfig":"32"},{"size":287,"mtime":1610006990936,"results":"42","hashOfConfig":"32"},{"size":729,"mtime":1610068489408,"results":"43","hashOfConfig":"32"},{"size":309,"mtime":1609870643000,"results":"44","hashOfConfig":"32"},{"size":4559,"mtime":1610004338973,"results":"45","hashOfConfig":"32"},{"size":239,"mtime":1609870643000,"results":"46","hashOfConfig":"32"},{"size":3828,"mtime":1610000936838,"results":"47","hashOfConfig":"32"},{"size":8320,"mtime":1610003710330,"results":"48","hashOfConfig":"32"},{"size":5927,"mtime":1609870643000,"results":"49","hashOfConfig":"32"},{"size":4323,"mtime":1609870643000,"results":"50","hashOfConfig":"32"},{"size":480,"mtime":1609870643000,"results":"51","hashOfConfig":"32"},{"size":508,"mtime":1609870643000,"results":"52","hashOfConfig":"32"},{"size":4385,"mtime":1610019380947,"results":"53","hashOfConfig":"32"},{"size":2439,"mtime":1609870643000,"results":"54","hashOfConfig":"32"},{"size":7786,"mtime":1610019421829,"results":"55","hashOfConfig":"32"},{"size":2187,"mtime":1610002594771,"results":"56","hashOfConfig":"32"},{"size":1842,"mtime":1610003179688,"results":"57","hashOfConfig":"32"},{"size":711,"mtime":1610006968542,"results":"58","hashOfConfig":"32"},{"size":444,"mtime":1610007154235,"results":"59","hashOfConfig":"32"},{"size":2172,"mtime":1610014983516,"results":"60","hashOfConfig":"32"},{"size":424,"mtime":1610069519760,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1flzvx3",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/index.tsx",[],["130","131"],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/i18n.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/reportWebVitals.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/App.tsx",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/common/constants/antdLocale.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/Router.tsx",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/Header/Header.tsx",["132","133"],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/Footer/Footer.tsx",["134"],"import * as React from 'react';\nimport { withTranslation, WithTranslation } from 'react-i18next';\n\nimport './Footer.scss';\n\ntype IProps = WithTranslation;\n\nconst Footer: React.FC<IProps> = props => {\n  const render: JSX.Element = React.useMemo(\n    () => (\n      <footer className={'footer'}>\n        <span>Copyright &copy; 2021 </span>\n        <a target=\"__blank\" href=\"https://github.com/EuphoriaCHN/hotel_management_fe\" rel=\"noopener noreferrer\">\n          XUST SE1701 GROUP 4.\n        </a>\n        <span>All Rights Reserved.</span>\n      </footer>\n    ),\n    [props.i18n.language]\n  );\n\n  return render;\n}\n\nexport default withTranslation()(Footer);\n","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/Sider/Sider.tsx",["135","136","137","138","139"],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/api.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/store/index.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/store/project.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/common/constants/locale.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/DashBoard/DashBoard.tsx",["140","141"],"import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { USER_TYPE } from '@common/constants';\n\nimport ContainerHeader from '@components/ContainerHeader/ContainerHeader';\n\nimport { Descriptions, Button, Modal, Form, Input, message, Badge } from 'antd';\n\nimport { MODIFY_ADMIN_PASSWORD, MODIFY_NORMAL_PASSWORD } from '@api';\nimport { setAuthKey } from '@store/project';\n\nimport './DashBoard.scss';\n\ntype IProps = {};\n\nfunction DashBoard(props: IProps) {\n  const [modifyPasswordModalVisible, setModifyPasswordModalVisible] = React.useState<boolean>(false);\n\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const history = useHistory();\n  const user: any = useSelector<any>(state => state.user);\n  const dispatch = useDispatch();\n\n  const onSubmitModifyPassword = React.useCallback(async () => {\n    const [oldPassword, newPassword, ensure] = ['oldPassword', 'newPassword', 'ensure'].map(item => form.getFieldValue(item));\n    let errorMessage = null;\n    switch (true) {\n      case newPassword !== ensure:\n        errorMessage = t('两次输入的新密码不一致！');\n        break;\n      case newPassword.length < 6:\n        errorMessage = t('密码长度不得小于 6 位！');\n        break;\n      case oldPassword !== user.password:\n        errorMessage = t('旧密码不正确！');\n        break;\n      case oldPassword === newPassword:\n        errorMessage = t('新旧密码不能相同！');\n    }\n    if (errorMessage) {\n      message.error(errorMessage);\n      return;\n    }\n\n    try {\n      const requestData = {\n        data: {\n          user: user.account,\n          name: user.account,\n          password: newPassword\n        }\n      };\n      if (user.type === 'normal') {\n        await MODIFY_NORMAL_PASSWORD(requestData);\n      } else {\n        await MODIFY_ADMIN_PASSWORD(requestData);\n      }\n      // 修改密码成功，清除用户数据，重新登录\n      dispatch(setAuthKey({\n        authHeaderKey: null,\n        authHeaderValue: null\n      }));\n      message.success(t('修改密码成功，请重新登录！'));\n      history.replace('/login');\n    } catch (error) {\n      message.error(t('修改密码失败'));\n      message.error(error);\n    }\n  }, [user]);\n\n  const render = React.useMemo(() => (\n    <React.Fragment>\n      <div className={'container dashboard'}>\n        <ContainerHeader text={t('个人中心')} />\n        <Descriptions bordered>\n          <Descriptions.Item label={t('用户名')} span={2}>\n            {user.account || ''}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('权限')} span={1}>\n            {user.type === 'admin' ? <Badge color={'blue'} /> : <Badge status={'success'} />}\n            {USER_TYPE[user.type]}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('密码')} span={3}>\n            <Button type={'primary'} onClick={setModifyPasswordModalVisible.bind(this, true)}>{t('修改密码')}</Button>\n          </Descriptions.Item>\n        </Descriptions>\n      </div>\n      <Modal\n        title={t('修改密码')}\n        visible={modifyPasswordModalVisible}\n        onOk={onSubmitModifyPassword}\n        onCancel={setModifyPasswordModalVisible.bind(this, false)}\n      >\n        <Form form={form}>\n          <Form.Item\n            name={'oldPassword'}\n            label={t('旧密码')}\n            rules={[{ required: true, message: t('此项为必填项!') }]}\n          >\n            <Input.Password\n              type={'password'}\n              placeholder={t('请输入旧密码')}\n              allowClear\n            />\n          </Form.Item>\n          <Form.Item\n            name={'newPassword'}\n            label={t('新密码')}\n            rules={[{ required: true, message: t('此项为必填项!') }]}\n          >\n            <Input.Password\n              type={'password'}\n              placeholder={t('请输入新密码')}\n              allowClear\n            />\n          </Form.Item>\n          <Form.Item\n            name={'ensure'}\n            label={t('二次确认')}\n            rules={[{ required: true, message: t('此项为必填项!') }]}\n          >\n            <Input.Password\n              type={'password'}\n              placeholder={t('请再次输入新密码')}\n              allowClear\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </React.Fragment>\n  ), [modifyPasswordModalVisible]);\n  return render;\n}\n\nexport default DashBoard;","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/NotFound/NotFound.tsx",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/About/About.tsx",["142","143","144"],"import * as React from 'react';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport dateFormat from 'dateformat';\n\nimport { Descriptions, Row, Col, Badge } from 'antd';\n\nimport { PresetStatusColorType } from 'antd/lib/_util/colors';\n\nimport './About.scss';\n\ntype IProps = WithTranslation;\n\nconst FrontendTechnologyStack = [\n  { href: 'https://zh-hans.reactjs.org/', name: 'React' },\n  { href: 'https://ant.design/index-cn', name: 'Ant Design' },\n  { href: 'https://mobx.js.org/README.html', name: 'MobX' },\n  { href: 'https://webpack.js.org/', name: 'Webpack' },\n  { href: 'https://babeljs.io/', name: 'Babel' },\n  { href: 'https://www.typescriptlang.org/', name: 'TypeScript' },\n  { href: 'https://github.com/postcss/autoprefixer', name: 'Autoprefixer' },\n  { href: 'https://eslint.org/', name: 'ESLint' },\n  { href: 'https://github.com/amireh/happypack', name: 'Happypack' },\n  { href: 'https://sass-lang.com/', name: 'Sass' },\n  { href: 'https://github.com/axios/axios', name: 'Axios' },\n  { href: 'https://www.i18next.com/', name: 'I18next' },\n];\n\nconst MiddlendTechnologyStack = [\n  { href: 'https://nodejs.org/zh-cn/', name: 'NodeJS' },\n  { href: 'https://koajs.com/', name: 'Koa' },\n  { href: 'https://www.mysql.com/cn/', name: 'MySQL' },\n  { href: 'https://github.com/koajs/session', name: 'Koa-session' },\n  { href: 'https://sequelize.org/v5/index.html', name: 'Sequelize' },\n];\n\nconst BackendTechnologyStack = [];\n\ninterface TSDIProps {\n  value: { href: string; name: string };\n  index: number;\n}\nfunction TechnologyStackDescription(props: TSDIProps) {\n  const [status, setStatus] = React.useState<PresetStatusColorType>('default');\n  const { index, value } = props;\n\n  const render = React.useMemo(\n    () => (\n      <Col\n        span={6}\n        key={index}\n        onMouseEnter={setStatus.bind(this, 'processing')}\n        onMouseLeave={setStatus.bind(this, 'default')}\n      >\n        <a href={value.href} rel=\"noopener noreferrer\">\n          <Badge status={status} />\n          {value.name}\n        </a>\n      </Col>\n    ),\n    [status]\n  );\n\n  return render;\n};\n\nconst About: React.FC<IProps> = props => {\n  const { t } = props;\n\n  const technologyStack = React.useMemo(() => ([{\n    name: t('前端技术栈'),\n    stack: FrontendTechnologyStack,\n  }, {\n    name: t('中台技术栈'),\n    stack: MiddlendTechnologyStack\n  }, {\n    name: t('后端技术栈'),\n    stack: BackendTechnologyStack\n  }]), [props.i18n.language]);\n\n  const dateFormater = {\n    zh: 'yyyy 年 mm 月 dd 日',\n    en: 'dddd mmm dd yyyy',\n  }[props.i18n.language === 'zh-CN' ? 'zh' : 'en'];\n\n  const render = React.useMemo(\n    () => (\n      <div className={'about container'}>\n        <Descriptions className={'container-about-description'} title={t('关于')} bordered>\n          <Descriptions.Item label={t('项目名称')} span={2}>\n            {t('酒店管理系统')}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('创建日期')}>\n            {dateFormat(new Date('2021-01-01'), dateFormater)}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('前端研发')}>王钦弘</Descriptions.Item>\n          <Descriptions.Item label={t('Node 端研发')}>王钦弘</Descriptions.Item>\n          <Descriptions.Item label={t('Server 研发')}>包海金</Descriptions.Item>\n          {technologyStack.map(({ name, stack }) => (\n            <Descriptions.Item span={3} label={name}>\n              <Row gutter={32}>\n                {stack.map((value, index) => (\n                  <TechnologyStackDescription key={index} value={value} index={index} />\n                ))}\n              </Row>\n            </Descriptions.Item>\n          ))}\n        </Descriptions>\n      </div>\n    ),\n    [props.i18n.language]\n  );\n\n  return render;\n};\n\nexport default withTranslation()(About);\n","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Users/Users.tsx",["145","146","147","148","149","150","151","152"],"import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { USER_TYPE } from '@common/constants';\nimport { debounce } from 'lodash-es';\n\nimport { message, Table, Space, Typography, Badge, Input, Popconfirm, Button } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\n\nimport {\n  QUERY_ALL_USER,\n  ADMIN_MODIFY_NORMAL,\n  ADMIN_DELETE_NORMAL,\n  ADMIN_QUERY_SOME_USER,\n  ADMIN_CREATE_NORMAL\n} from '@api';\n\nimport ContainerHeader from '@components/ContainerHeader/ContainerHeader';\nimport ModifyUserModal from '@components/ModifyUserModal/ModifyUserModal';\nimport AddUserModal from '@components/AddUserModal/AddUserModal';\n\nimport './Users.scss';\n\nconst DEFAULT_CURRENT = 1;\nconst DEFAULT_PAGE_SIZE = 10;\n\nexport type UserTable = {\n  key: string;\n  name: string;\n  account: string;\n  type: keyof typeof USER_TYPE;\n};\n\ntype IProps = {};\n\nfunction Users(props: IProps) {\n  const [current, setCurrent] = React.useState<number>(DEFAULT_CURRENT);\n  const [pageSize, setPageSize] = React.useState<number>(DEFAULT_PAGE_SIZE);\n  const [total, setTotal] = React.useState<number>(0);\n  const [tableData, setTableData] = React.useState<UserTable[]>([]);\n  const [searchedValue, setSearchedValue] = React.useState<string>('');\n\n  const [modifiedUserModalVisible, setModifiedUserModalVisible] = React.useState<boolean>(false);\n  const [modifiedUser, setModifiedUser] = React.useState<UserTable>(null);\n\n  const [addUserModalVisible, setAddUserModalVisible] = React.useState<boolean>(false);\n\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  const { t } = useTranslation();\n  const project: any = useSelector((state: any) => state.project);\n\n\n  const loadData = React.useCallback(async () => {\n    setLoading(true);\n    try {\n      const data = await QUERY_ALL_USER([current, pageSize]);\n      if (!data || !data.length) {\n        // empty\n        setTotal(0);\n        setTableData([]);\n        return;\n      }\n      const _tableData: UserTable[] = data.map((item: any) => ({\n        key: item.user,\n        name: item.name,\n        account: item.user,\n        type: item.type === 't0' ? 'normal' : 'admin'\n      }));\n\n      setTotal(data[0].count);\n      setTableData(_tableData);\n    } catch (error) {\n      message.error(t('加载用户信息失败！'));\n      message.error(error.message || JSON.stringify(error));\n    } finally {\n      setLoading(false);\n    }\n  }, [current, pageSize]);\n\n  const onModifiedUser = React.useCallback(async (name: string, account: string, password: string | null) => {\n    if (!name || !account) {\n      message.error(t('请输入正确值！'));\n      return;\n    }\n\n    setLoading(true);\n    try {\n      await ADMIN_MODIFY_NORMAL({\n        data: {\n          user: account,\n          name,\n          password\n        }\n      });\n      // 修改成功，重新拉数据\n      message.success(t('修改已保存'));\n      loadData();\n    } catch (error) {\n      message.error(t('修改失败'));\n      message.error(error.message || JSON.stringify(error));\n      setLoading(false);\n    }\n  }, [loadData]);\n\n  const onCreateUser = React.useCallback(async (name: string, password: string) => {\n    setLoading(true);\n    try {\n      await ADMIN_CREATE_NORMAL({\n        data: {\n          name,\n          password,\n          type: 'normal'\n        }\n      });\n      message.success(t('创建用户成功'));\n      if (searchedValue && searchedValue.length) {\n        // 有搜索，进行搜索更新\n        handleSearchUser({ target: { value: searchedValue } });\n      } else {\n        loadData();\n      }\n    } catch (error) {\n      message.error(error.message || JSON.stringify(error));\n      message.error(t('创建新用户失败！'));\n    } finally {\n      setLoading(false);\n    }\n  }, [searchedValue]);\n\n  const handleDeleteUser = React.useCallback(async (user: UserTable) => {\n    setLoading(true);\n    try {\n      await ADMIN_DELETE_NORMAL({\n        user: user.account\n      });\n      message.success(t('用户已删除'));\n      if (searchedValue && searchedValue.length) {\n        // 有搜索，进行搜索更新\n        handleSearchUser({ target: { value: searchedValue } });\n      } else {\n        loadData();\n      }\n    } catch (error) {\n      message.error(t('删除失败'));\n      message.error(error.message || JSON.stringify(error));\n      setLoading(false);\n    }\n  }, [searchedValue]);\n\n  const handleSearchUser = React.useCallback(debounce((event: any) => {\n    const searchValue = event.target.value;\n    setSearchedValue(searchValue);\n\n    setLoading(true);\n    ADMIN_QUERY_SOME_USER([searchValue, DEFAULT_CURRENT, DEFAULT_PAGE_SIZE]).then(value => {\n      setCurrent(DEFAULT_CURRENT);\n      setPageSize(DEFAULT_PAGE_SIZE);\n      if (!value || !value.length) {\n        setTotal(0);\n        setTableData([]);\n        return;\n      }\n      const _tableData: UserTable[] = value.map((item: any) => ({\n        key: item.user,\n        name: item.name,\n        account: item.user,\n        type: item.type === 't0' ? 'normal' : 'admin'\n      }));\n\n      setTotal(value[0].count);\n      setTableData(_tableData);\n    }, error => {\n      message.error(error.message || JSON.stringify(error));\n      message.error(t('糟糕...服务器打瞌睡了...'));\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, 500), []);\n\n  // Component did mount\n  React.useEffect(() => {\n    setSearchedValue('');\n  }, []);\n\n  const renderTableTypeColumn = React.useCallback((type: keyof typeof USER_TYPE) => (\n    <span>\n      {type === 'admin' ? <Badge color={'blue'} /> : <Badge status={'success'} />}\n      {USER_TYPE[type]}\n    </span>\n  ), []);\n\n  const renderTableActionColumn = React.useCallback((_: any, record: UserTable) => (\n    <Space size={'middle'}>\n      <Typography.Link\n        onClick={() => {\n          setModifiedUser(record);\n          setModifiedUserModalVisible(true);\n        }}\n      >\n        {t('修改密码')}\n      </Typography.Link>\n      <Popconfirm\n        title={t('确认要删除此用户？删除后数据不可恢复')}\n        onConfirm={handleDeleteUser.bind(this, record)}\n        okText={t('删除')}\n        cancelText={t('取消')}\n        okType={'danger'}\n      >\n        <Typography.Link>{t('删除')}</Typography.Link>\n      </Popconfirm>\n    </Space>\n  ), []);\n\n  const tableColumns = React.useMemo(() => ([{\n    title: t('姓名'),\n    dataIndex: 'name',\n    key: 'name',\n  }, {\n    title: t('账号'),\n    dataIndex: 'account',\n    key: 'account',\n  }, {\n    title: t('权限'),\n    dataIndex: 'type',\n    key: 'type',\n    render: renderTableTypeColumn\n  }, {\n    title: t('更多'),\n    key: 'action',\n    render: renderTableActionColumn\n  }]), []);\n\n  const handleTablePagination = React.useCallback((page: number, pageSize?: number) => {\n    setCurrent(page);\n    pageSize && setPageSize(pageSize);\n  }, []);\n\n  // Component did mount\n  React.useEffect(() => {\n    if (project.authHeaderKey) {\n      loadData();\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className={'users container'}>\n        <ContainerHeader text={t('用户管理')} />\n        <div className={'users-operations'}>\n          <Input\n            prefix={<SearchOutlined />}\n            placeholder={t('按姓名搜索用户')}\n            style={{ width: '50%' }}\n            onChange={handleSearchUser.bind(this)}\n          />\n          <Button\n            type={'primary'}\n            onClick={setAddUserModalVisible.bind(this, true)}\n          >\n            {t('添加新用户')}\n          </Button>\n        </div>\n        <Table\n          loading={loading}\n          dataSource={tableData}\n          pagination={{ current, pageSize, total, onChange: handleTablePagination }}\n          columns={tableColumns}\n        />\n      </div>\n      <ModifyUserModal\n        visible={modifiedUserModalVisible}\n        onCancel={() => {\n          setModifiedUserModalVisible(false);\n          setModifiedUser(null);\n        }}\n        onOk={onModifiedUser}\n        loading={loading}\n        modifiedUser={modifiedUser}\n      />\n      <AddUserModal\n        visible={addUserModalVisible}\n        onCancel={setAddUserModalVisible.bind(this, false)}\n        loading={loading}\n        onOk={onCreateUser}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default Users;","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Platform/Platform.tsx",["153","154","155","156","157","158","159"],"import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport classnames from 'classnames';\nimport { chunk } from 'lodash-es';\n\nimport { IdentityType, REGEXP } from '@common/constants';\n\nimport { Card, Form, Checkbox, Input, Button, Row, Col } from 'antd';\n\nimport ContainerHeader from '@components/ContainerHeader/ContainerHeader';\n\nimport CheckInUserInfoForm from './CheckInUserInfoForm';\n\nimport {\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n  ArrowLeftOutlined,\n  ContainerOutlined,\n  PlusOutlined,\n} from '@ant-design/icons';\n\nimport './Platform.scss';\n\ntype IProps = {};\n\nfunction Platform(props: IProps) {\n  const [hasReverse, setHasReverse] = React.useState<boolean>(false);\n  const [status, setStatus] = React.useState<'checkIn' | 'checkOut'>(null);\n  const { t, i18n } = useTranslation();\n\n  const [form] = Form.useForm();\n\n  const cardItems = React.useMemo(() => ([{\n    label: t('入住登记'),\n    coverIcon: <CheckCircleOutlined />,\n    coverClassName: 'check-in-card-cover',\n    onClick: setStatus.bind(this, 'checkIn')\n  }, {\n    label: t('离店登记'),\n    coverIcon: <CloseCircleOutlined />,\n    coverClassName: 'check-out-card-cover',\n    onClick: () => { }\n  }]), [i18n.language]);\n\n  const renderSelectStatusCard = React.useMemo(() => (\n    <div className={'platform-card-container'}>\n      {cardItems.map(item => (\n        <Card\n          className={'platform-card'}\n          cover={<div className={classnames('platform-card-cover', item.coverClassName)}>{item.coverIcon}</div>}\n          onClick={item.onClick}\n          hoverable\n        >\n          <Card.Meta title={item.label} />\n        </Card>\n      ))}\n    </div>\n  ), [status]);\n\n  /**\n   * 输入完成订单号，查询订单详情\n   */\n  const onReverseIDBlur = React.useCallback(() => {\n    const reverseID = form.getFieldValue('reverseID');\n    if (!reverseID) {\n      return;\n    }\n\n  }, []);\n\n  const onCheckInFormFinish = React.useCallback(({ guests }) => {\n    console.log(guests);\n    return;\n    // if (hasReverse) {\n    //   if (!reverseID) {\n    //     message.error(t('请输入预订订单号！'));\n    //     return;\n    //   }\n    // } else {\n    //   let errorMessage: string = null;\n    //   switch (undefined) {\n    //     case hosingName:\n    //       errorMessage = t('请输入客户姓名');\n    //       break;\n    //     case hosingPhone:\n    //       errorMessage = t('请输入客户联系方式');\n    //       break;\n    //     case identity.type:\n    //       errorMessage = t('请选择证件类型');\n    //       break;\n    //     case identity.id:\n    //       errorMessage = t('请输入证件编号');\n    //   }\n    //   if (errorMessage) {\n    //     message.error(errorMessage);\n    //     return;\n    //   }\n    //   switch (false) {\n    //     case REGEXP.name.test(hosingName):\n    //       errorMessage = t('姓名格式错误！');\n    //       break;\n    //     case REGEXP.phone.test(hosingPhone):\n    //       errorMessage = t('联系方式格式错误！');\n    //       break;\n    //   }\n    //   if (errorMessage) {\n    //     message.error(errorMessage);\n    //     return;\n    //   }\n    //   switch (IdentityType[identity.type]) {\n    //     case IdentityType.ID:\n    //       REGEXP.id.test(identity.id) || (errorMessage = t('身份证格式错误'));\n    //       break;\n    //     case IdentityType.DRIVER_LICENSE:\n    //       REGEXP.driver.test(identity.id) || (errorMessage = t('驾驶证格式错误'));\n    //       break;\n    //     case IdentityType.CERTIFICATE:\n    //       REGEXP.certificate.test(identity.id) || (errorMessage = t('军官证格式错误'));\n    //   }\n    //   if (errorMessage) {\n    //     message.error(errorMessage);\n    //     return;\n    //   }\n    // }\n  }, [hasReverse]);\n\n  const renderCheckinTab = React.useMemo(() => (\n    <div className={'platform-tab'}>\n      <ContainerHeader text={t('入住登记')} backIcon={<ArrowLeftOutlined />} onBackIconClick={setStatus.bind(this, null)} />\n      <div className={'platform-container'}>\n        <Form\n          className={'platform-checkin-form'}\n          onFinish={onCheckInFormFinish}\n          form={form}\n          autoComplete={'off'}\n        >\n          <Form.Item>\n            <Checkbox checked={hasReverse} onChange={setHasReverse.bind(this, (prev: boolean) => !prev)}>{t('是否有预订')}</Checkbox>\n          </Form.Item>\n          {hasReverse ? (\n            <Form.Item name={'reverseID'}>\n              <Input prefix={<ContainerOutlined />} placeholder={t('订单号')} onBlur={onReverseIDBlur} allowClear autoFocus />\n            </Form.Item>\n          ) : (\n              <Form.List name=\"guests\">\n                {(fields, { add, remove }) => {\n                  const chunks = chunk(fields.map(field => (\n                    <CheckInUserInfoForm formField={field} onRemove={remove.bind(this, field.name)} />\n                  )), 2);\n                  return (\n                    <React.Fragment>\n                      {chunks.map(row => (\n                        <Row gutter={32}>\n                          {row.map(col => <Col span={12}>{col}</Col>)}\n                        </Row>\n                      ))}\n                      <Form.Item>\n                        <Button type=\"dashed\" onClick={add} block icon={<PlusOutlined />}>\n                          {t('增加客户')}\n                        </Button>\n                      </Form.Item>\n                    </React.Fragment>\n                  );\n                }}\n              </Form.List>\n            )}\n          <Form.Item>\n            <Button type={'primary'} htmlType={'submit'} block>{t('提交信息')}</Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div >\n  ), [hasReverse, onCheckInFormFinish]);\n\n  return (\n    <div className={'platform container'}>\n      {status === null ? renderSelectStatusCard : renderCheckinTab}\n    </div>\n  );\n}\n\nexport default Platform;","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Login/Login.tsx",["160","161"],"import * as React from 'react';\nimport { Carousel, Form, Input, Button, Typography, Tooltip, message, Switch } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport { LOGIN } from '@api';\n\nimport { setUser } from '@store/user';\nimport { setAuthKey } from '@store/project';\n\nimport './Login.scss';\n\nconst webpackContext = require.context('../../common/images/loginCarouselImages', true, /\\.jpg$/);\nconst carouselBackgroundImages = webpackContext.keys().reduce((modules, path) => {\n  const name = path.replace(/^\\.\\/(.*)\\..+$/, '$1');\n  const module = webpackContext(path);\n  modules[name] = module.default;\n  return modules;\n}, {});\n\ntype IProps = {};\n\nconst caruselBaseStyle: React.CSSProperties = {\n  height: '100vh',\n  backgroundColor: '#364d79',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n};\n\nfunction Login(props: IProps) {\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onFormSubmit = React.useCallback<\n    (_: { userName: string; password: string; isAdmin: boolean; }) => Promise<unknown>\n  >(async ({ userName, password, isAdmin }) => {\n    const errorMessage = !userName ? t('用户名不能为空') : !password ? t('密码不能为空') : null;\n    if (errorMessage) {\n      message.error(errorMessage);\n      return;\n    }\n    setLoading(true);\n    try {\n      const { authHeaderKey, authHeaderValue } = await LOGIN({\n        data: {\n          user: userName,\n          password: password,\n          type: isAdmin ? 'admin' : 'normal'\n        }\n      });\n      dispatch(setUser({\n        type: isAdmin ? 'admin' : 'normal',\n        account: userName,\n        password\n      }));\n      dispatch(setAuthKey({\n        authHeaderKey,\n        authHeaderValue,\n      }));\n      // 登录成功，redirect\n      message.success(t('登录成功'));\n      history.replace('/platform');\n    } catch (error) {\n      message.error(t('登录失败!'));\n      message.error(error.message || JSON.stringify(error));\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const render = React.useMemo(() => (\n    <div className={'login-page'}>\n      <div className={'login-page-form-box'}>\n        <Typography.Title title={'h2'}>\n          {t('酒店管理系统')}\n        </Typography.Title>\n        <Form\n          name={'normal_login'}\n          className={'login-form'}\n          initialValues={{ remember: true }}\n          onFinish={onFormSubmit}\n        >\n          <Form.Item\n            name={'userName'}\n            rules={[{ required: true, message: t('用户名为必填项!') }]}\n          >\n            <Input prefix={<UserOutlined className={'site-form-item-icon'} />} placeholder={t('用户名')} allowClear autoFocus />\n          </Form.Item>\n          <Form.Item\n            name={'password'}\n            rules={[{ required: true, message: t('密码为必填项!') }]}\n          >\n            <Input.Password\n              prefix={<LockOutlined className={'site-form-item-icon'} />}\n              type={'password'}\n              placeholder={t('密码')}\n              allowClear\n            />\n          </Form.Item>\n          <Form.Item label={t('是否为管理员')} name={'isAdmin'}>\n            <Switch />\n          </Form.Item>\n          <Form.Item>\n            <Button loading={loading} type={'primary'} htmlType={'submit'} block>\n              {t('登录')}\n            </Button>\n          </Form.Item>\n          <Form.Item className={'more-operation'}>\n            <Tooltip title={t('请联系管理员修改密码')}>\n              <Typography.Link>{t('忘记密码？')}</Typography.Link>\n            </Tooltip>\n          </Form.Item>\n        </Form>\n      </div>\n      <Carousel\n        effect={'fade'}\n        dotPosition={'right'}\n        autoplay\n      >\n        {Object.values(carouselBackgroundImages).map(image => (\n          <div>\n            <div\n              style={Object.assign({}, caruselBaseStyle, { backgroundImage: `url(${image})` })}\n            />\n          </div>\n        ))}\n      </Carousel>\n    </div>\n  ), [loading]);\n  return render;\n}\n\nexport default Login;","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/store/user.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/ContainerHeader/ContainerHeader.tsx",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/common/constants/index.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Platform/CheckInUserInfoForm.tsx",["162"],"import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { IdentityType } from '@common/constants';\n\nimport { Form, Input, Select, Tooltip, Space } from 'antd';\n\nimport { FormListFieldData } from 'antd/lib/form/FormList';\n\nimport {\n  UserOutlined,\n  PhoneOutlined,\n  MinusCircleOutlined\n} from '@ant-design/icons';\n\ntype IProps = {\n  formField: FormListFieldData;\n  onRemove?: any;\n};\n\nfunction CheckInUserInfoForm(props: IProps) {\n  const { t } = useTranslation();\n\n  const { formField } = props;\n\n  return (\n    <div className={'check-in-user-info-form'} key={formField.fieldKey}>\n      <Form.Item\n        {...formField}\n        label={t('客人姓名')}\n        name={[formField.name, 'hosingName']}\n        fieldKey={[formField.key, 'hosingName']}\n      >\n        <Input prefix={<UserOutlined />} placeholder={t('请输入客户姓名')} allowClear autoFocus />\n      </Form.Item>\n      <Form.Item\n        {...formField}\n        label={t('联系方式')}\n        name={[formField.name, 'hosingPhone']}\n        fieldKey={[formField.key, 'hosingPhone']}\n      >\n        <Input prefix={<PhoneOutlined />} placeholder={t('请输入客户联系方式')} allowClear />\n      </Form.Item>\n      <Form.Item\n        {...formField}\n        label={t('证件信息')}\n        fieldKey={[formField.key, 'identity']}\n        noStyle\n      >\n        <Input.Group compact>\n          <Form.Item\n            {...formField}\n            name={[formField.name, 'identity', 'type']}\n            fieldKey={[formField.key, 'identity', 'type']}\n            noStyle\n          >\n            <Select style={{ width: '35%' }} placeholder={t('请选择证件类型')}>\n              {Object.keys(IdentityType).map(key => (\n                <Select.Option value={key}>{IdentityType[key]}</Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            {...formField}\n            name={[formField.name, 'identity', 'id']}\n            fieldKey={[formField.key, 'identity', 'id']}\n            noStyle\n          >\n            <Input style={{ width: '65%' }} placeholder={t('请输入证件编号')} allowClear />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n      <Tooltip title={t('移除此项')}>\n        <MinusCircleOutlined className={'check-in-user-info-form-remove'} onClick={props.onRemove} />\n      </Tooltip>\n    </div>\n  );\n}\n\nexport default CheckInUserInfoForm;","/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/RoomManagement/RoomManagement.tsx",["163","164","165","166","167","168"],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/ModifyUserModal/ModifyUserModal.tsx",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/AddUserModal/AddUserModal.tsx",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/store/room.ts",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Reservation/Reservation.tsx",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/components/AddRoomTypeModal/AddRoomTypeModal.tsx",[],"/Users/bytedance/Desktop/programming/hotel_management_fe-master/src/containers/Search/Search.tsx",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":55,"column":6,"nodeType":"175","endLine":55,"endColumn":8,"suggestions":"176"},{"ruleId":"173","severity":1,"message":"177","line":95,"column":6,"nodeType":"175","endLine":95,"endColumn":12,"suggestions":"178"},{"ruleId":"173","severity":1,"message":"179","line":19,"column":5,"nodeType":"175","endLine":19,"endColumn":26,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":39,"column":14,"nodeType":"183","messageId":"184","endLine":39,"endColumn":18},{"ruleId":"173","severity":1,"message":"185","line":52,"column":6,"nodeType":"175","endLine":52,"endColumn":8,"suggestions":"186"},{"ruleId":"173","severity":1,"message":"187","line":62,"column":7,"nodeType":"175","endLine":62,"endColumn":9,"suggestions":"188"},{"ruleId":"173","severity":1,"message":"189","line":83,"column":6,"nodeType":"175","endLine":83,"endColumn":12,"suggestions":"190"},{"ruleId":"173","severity":1,"message":"191","line":92,"column":6,"nodeType":"175","endLine":92,"endColumn":26,"suggestions":"192"},{"ruleId":"173","severity":1,"message":"193","line":72,"column":6,"nodeType":"175","endLine":72,"endColumn":12,"suggestions":"194"},{"ruleId":"173","severity":1,"message":"195","line":134,"column":6,"nodeType":"175","endLine":134,"endColumn":34,"suggestions":"196"},{"ruleId":"173","severity":1,"message":"197","line":60,"column":5,"nodeType":"175","endLine":60,"endColumn":13,"suggestions":"198"},{"ruleId":"173","severity":1,"message":"187","line":78,"column":8,"nodeType":"175","endLine":78,"endColumn":29,"suggestions":"199"},{"ruleId":"173","severity":1,"message":"200","line":110,"column":5,"nodeType":"175","endLine":110,"endColumn":26,"suggestions":"201"},{"ruleId":"173","severity":1,"message":"202","line":79,"column":6,"nodeType":"175","endLine":79,"endColumn":25,"suggestions":"203"},{"ruleId":"173","severity":1,"message":"202","line":104,"column":6,"nodeType":"175","endLine":104,"endColumn":16,"suggestions":"204"},{"ruleId":"173","severity":1,"message":"205","line":129,"column":6,"nodeType":"175","endLine":129,"endColumn":21,"suggestions":"206"},{"ruleId":"173","severity":1,"message":"205","line":149,"column":6,"nodeType":"175","endLine":149,"endColumn":21,"suggestions":"207"},{"ruleId":"173","severity":1,"message":"208","line":151,"column":28,"nodeType":"209","endLine":151,"endColumn":45},{"ruleId":"173","severity":1,"message":"210","line":213,"column":6,"nodeType":"175","endLine":213,"endColumn":8,"suggestions":"211"},{"ruleId":"173","severity":1,"message":"212","line":232,"column":8,"nodeType":"175","endLine":232,"endColumn":10,"suggestions":"213"},{"ruleId":"173","severity":1,"message":"214","line":244,"column":6,"nodeType":"175","endLine":244,"endColumn":8,"suggestions":"215"},{"ruleId":"181","severity":1,"message":"216","line":6,"column":10,"nodeType":"183","messageId":"184","endLine":6,"endColumn":22},{"ruleId":"181","severity":1,"message":"217","line":6,"column":24,"nodeType":"183","messageId":"184","endLine":6,"endColumn":30},{"ruleId":"173","severity":1,"message":"187","line":43,"column":8,"nodeType":"175","endLine":43,"endColumn":23,"suggestions":"218"},{"ruleId":"173","severity":1,"message":"219","line":58,"column":6,"nodeType":"175","endLine":58,"endColumn":14,"suggestions":"220"},{"ruleId":"173","severity":1,"message":"221","line":69,"column":6,"nodeType":"175","endLine":69,"endColumn":8,"suggestions":"222"},{"ruleId":"173","severity":1,"message":"223","line":125,"column":6,"nodeType":"175","endLine":125,"endColumn":18,"suggestions":"224"},{"ruleId":"173","severity":1,"message":"225","line":173,"column":6,"nodeType":"175","endLine":173,"endColumn":39,"suggestions":"226"},{"ruleId":"173","severity":1,"message":"177","line":74,"column":6,"nodeType":"175","endLine":74,"endColumn":8,"suggestions":"227"},{"ruleId":"173","severity":1,"message":"228","line":134,"column":6,"nodeType":"175","endLine":134,"endColumn":15,"suggestions":"229"},{"ruleId":"181","severity":1,"message":"230","line":5,"column":40,"nodeType":"183","messageId":"184","endLine":5,"endColumn":45},{"ruleId":"181","severity":1,"message":"231","line":20,"column":31,"nodeType":"183","messageId":"184","endLine":20,"endColumn":45},{"ruleId":"173","severity":1,"message":"232","line":80,"column":6,"nodeType":"175","endLine":80,"endColumn":24,"suggestions":"233"},{"ruleId":"173","severity":1,"message":"234","line":105,"column":6,"nodeType":"175","endLine":105,"endColumn":12,"suggestions":"235"},{"ruleId":"173","severity":1,"message":"234","line":122,"column":6,"nodeType":"175","endLine":122,"endColumn":8,"suggestions":"236"},{"ruleId":"173","severity":1,"message":"237","line":143,"column":6,"nodeType":"175","endLine":143,"endColumn":8,"suggestions":"238"},{"ruleId":"173","severity":1,"message":"239","line":177,"column":8,"nodeType":"175","endLine":177,"endColumn":10,"suggestions":"240"},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'history' and 'project.authHeaderValue'. Either include them or remove the dependency array.","ArrayExpression",["243"],"React Hook React.useCallback has missing dependencies: 'dispatch', 'history', and 't'. Either include them or remove the dependency array.",["244"],"React Hook React.useMemo has an unnecessary dependency: 'props.i18n.language'. Either exclude it or remove the dependency array.",["245"],"@typescript-eslint/no-unused-vars","'i18n' is assigned a value but never used.","Identifier","unusedVar","React Hook React.useCallback has a missing dependency: '_history'. Either include it or remove the dependency array.",["246"],"React Hook React.useMemo has a missing dependency: 't'. Either include it or remove the dependency array.",["247"],"React Hook React.useCallback has a missing dependency: 'handleChangeRoute'. Either include it or remove the dependency array.",["248"],"React Hook React.useEffect has a missing dependency: '_history'. Either include it or remove the dependency array.",["249"],"React Hook React.useCallback has missing dependencies: 'dispatch', 'form', 'history', and 't'. Either include them or remove the dependency array.",["250"],"React Hook React.useMemo has missing dependencies: 'form', 'onSubmitModifyPassword', 't', 'user.account', and 'user.type'. Either include them or remove the dependency array.",["251"],"React Hook React.useMemo has missing dependencies: 'index', 'value.href', and 'value.name'. Either include them or remove the dependency array.",["252"],["253"],"React Hook React.useMemo has missing dependencies: 'dateFormater', 't', and 'technologyStack'. Either include them or remove the dependency array.",["254"],"React Hook React.useCallback has a missing dependency: 't'. Either include it or remove the dependency array.",["255"],["256"],"React Hook React.useCallback has missing dependencies: 'handleSearchUser', 'loadData', and 't'. Either include them or remove the dependency array.",["257"],["258"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","MemberExpression","React Hook React.useCallback has missing dependencies: 'handleDeleteUser' and 't'. Either include them or remove the dependency array.",["259"],"React Hook React.useMemo has missing dependencies: 'renderTableActionColumn', 'renderTableTypeColumn', and 't'. Either include them or remove the dependency array.",["260"],"React Hook React.useEffect has missing dependencies: 'loadData' and 'project.authHeaderKey'. Either include them or remove the dependency array.",["261"],"'IdentityType' is defined but never used.","'REGEXP' is defined but never used.",["262"],"React Hook React.useMemo has a missing dependency: 'cardItems'. Either include it or remove the dependency array.",["263"],"React Hook React.useCallback has a missing dependency: 'form'. Either include it or remove the dependency array.",["264"],"React Hook React.useCallback has an unnecessary dependency: 'hasReverse'. Either exclude it or remove the dependency array.",["265"],"React Hook React.useMemo has missing dependencies: 'form', 'onReverseIDBlur', and 't'. Either include them or remove the dependency array.",["266"],["267"],"React Hook React.useMemo has missing dependencies: 'onFormSubmit' and 't'. Either include them or remove the dependency array.",["268"],"'Space' is defined but never used.","'QUERY_ALL_ROOM' is defined but never used.","React Hook React.useCallback has missing dependencies: 'dispatch' and 't'. Either include them or remove the dependency array.",["269"],"React Hook React.useCallback has missing dependencies: 'handleLoadRoomTypes' and 't'. Either include them or remove the dependency array.",["270"],["271"],"React Hook React.useEffect has a missing dependency: 'handleLoadRoomTypes'. Either include it or remove the dependency array.",["272"],"React Hook React.useMemo has missing dependencies: 'handleDeleteRoomType' and 't'. Either include them or remove the dependency array.",["273"],"no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"282","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"301","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"282","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"278","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},"Update the dependencies array to be: [history, project.authHeaderValue]",{"range":"332","text":"333"},"Update the dependencies array to be: [dispatch, history, t, user.account, user.password, user.type]",{"range":"334","text":"335"},"Update the dependencies array to be: []",{"range":"336","text":"337"},"Update the dependencies array to be: [_history]",{"range":"338","text":"339"},"Update the dependencies array to be: [t]",{"range":"340","text":"341"},"Update the dependencies array to be: [handleChangeRoute, user.type]",{"range":"342","text":"343"},"Update the dependencies array to be: [_history, _location.pathname]",{"range":"344","text":"345"},"Update the dependencies array to be: [dispatch, form, history, t, user.account, user.password, user.type]",{"range":"346","text":"347"},"Update the dependencies array to be: [form, modifyPasswordModalVisible, onSubmitModifyPassword, t, user.account, user.type]",{"range":"348","text":"349"},"Update the dependencies array to be: [index, status, value.href, value.name]",{"range":"350","text":"351"},{"range":"352","text":"341"},"Update the dependencies array to be: [dateFormater, t, technologyStack]",{"range":"353","text":"354"},"Update the dependencies array to be: [current, pageSize, t]",{"range":"355","text":"356"},"Update the dependencies array to be: [loadData, t]",{"range":"357","text":"358"},"Update the dependencies array to be: [handleSearchUser, loadData, searchedValue, t]",{"range":"359","text":"360"},{"range":"361","text":"360"},"Update the dependencies array to be: [handleDeleteUser, t]",{"range":"362","text":"363"},"Update the dependencies array to be: [renderTableActionColumn, renderTableTypeColumn, t]",{"range":"364","text":"365"},"Update the dependencies array to be: [loadData, project.authHeaderKey]",{"range":"366","text":"367"},{"range":"368","text":"341"},"Update the dependencies array to be: [cardItems]",{"range":"369","text":"370"},"Update the dependencies array to be: [form]",{"range":"371","text":"372"},{"range":"373","text":"337"},"Update the dependencies array to be: [form, hasReverse, onCheckInFormFinish, onReverseIDBlur, t]",{"range":"374","text":"375"},"Update the dependencies array to be: [dispatch, history, t]",{"range":"376","text":"377"},"Update the dependencies array to be: [loading, onFormSubmit, t]",{"range":"378","text":"379"},"Update the dependencies array to be: [dispatch, roomTableCurrent, t]",{"range":"380","text":"381"},"Update the dependencies array to be: [handleLoadRoomTypes, room.types, t]",{"range":"382","text":"383"},"Update the dependencies array to be: [handleLoadRoomTypes, t]",{"range":"384","text":"385"},"Update the dependencies array to be: [handleLoadRoomTypes]",{"range":"386","text":"387"},"Update the dependencies array to be: [handleDeleteRoomType, t]",{"range":"388","text":"389"},[1558,1560],"[history, project.authHeaderValue]",[2589,2595],"[dispatch, history, t, user.account, user.password, user.type]",[563,584],"[]",[1417,1419],"[_history]",[2039,2041],"[t]",[2611,2617],"[handleChangeRoute, user.type]",[2857,2877],"[_history, _location.pathname]",[2187,2193],"[dispatch, form, history, t, user.account, user.password, user.type]",[4199,4227],"[form, modifyPasswordModalVisible, onSubmitModifyPassword, t, user.account, user.type]",[2064,2072],"[index, status, value.href, value.name]",[2409,2430],[3634,3655],"[dateFormater, t, technologyStack]",[2441,2460],"[current, pageSize, t]",[3046,3056],"[loadData, t]",[3695,3710],"[handleSearchUser, loadData, searchedValue, t]",[4257,4272],[6105,6107],"[handleDeleteUser, t]",[6481,6483],"[renderTableActionColumn, renderTableTypeColumn, t]",[6761,6763],"[loadData, project.authHeaderKey]",[1198,1213],[1664,1672],"[cardItems]",[1863,1865],"[form]",[3567,3579],[5489,5522],"[form, hasReverse, onCheckInFormFinish, onReverseIDBlur, t]",[2221,2223],"[dispatch, history, t]",[4124,4133],"[loading, onFormSubmit, t]",[2873,2891],"[dispatch, roomTableCurrent, t]",[3553,3559],"[handleLoadRoomTypes, room.types, t]",[3995,3997],"[handleLoadRoomTypes, t]",[4655,4657],"[handleLoadRoomTypes]",[5649,5651],"[handleDeleteRoomType, t]"]